[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "cogment_lab"
dynamic = ["version"]
readme = "README.md"
license = ""

dependencies = [
    "cogment[generate]>=2.10.1,<3.0.0",
    "grpcio>=1.48",
    "grpcio-tools>=1.48",
    "PyYAML>=5.0",
    "starlette>=0.21.0",
    "uvicorn>=0.17.6",
    "Gymnasium[classic_control]~=0.29",
    "PettingZoo~=1.23.1",
    "numpy",
    "opencv-python>=4.8",
    "fastapi>=0.103",
    "pillow>=9.0",
]

[project.scripts]
cogmentlab = "cogment_lab.cli.cli:main"

[tool.hatch.version]
path = "cogment_lab/version.py"

[tool.hatch.build.targets.sdist]
include = ["/cogment_lab"]

# Package ######################################################################


[project.optional-dependencies]
# Update dependencies in `all` if any are added or removed
all = [
    "pytest >=7.1.3",
    "pytest-asyncio",
    "coltra>=0.2.1",
    "torch",
    "matplotlib",
    "wandb>=0.13.9",
    "hatch>=1.9.1",
    "ruff>=0.1.7",
    "jupyter>=1.0.0",
    "jupyterlab>=3.5.3",
]
dev = [
    "pytest>=7.1.3",
    "pytest-asyncio",
    "ruff>=0.1.7",
    "hatch>=1.7.0"
]
coltra = ["coltra>=0.2.1", "torch", "wandb>=0.13.9"]

[project.urls]
Homepage = "https://cogment.ai/lab"
Repository = "https://github.com/cogment/cogment_lab"
Documentation = "https://cogment.ai/lab"
"Bug Report" = "https://github.com/cogment/cogment_lab/issues"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
include = ["cogment_lab", "cogment_lab.*"]

[tool.setuptools.package-data]
cogment_lab = ["py.typed"]

[tool.setuptools.dynamic.version]
attr = "cogment_lab.version.__version__"

# Linters and Test tools #######################################################

[tool.black]
safe = true

[tool.isort]
atomic = true
profile = "black"
src_paths = ["cogment_lab", "tests", "docs/scripts"]
extra_standard_library = ["typing_extensions"]
indent = 4
lines_after_imports = 2
multi_line_output = 3

[tool.pyright]
include = ["cogment_lab/**", "tests/**"]
exclude = ["**/node_modules", "**/__pycache__", "cogment_lab/generated/**"]
strict = []
typeCheckingMode = "basic"
pythonVersion = "3.10"
pythonPlatform = "All"
enableTypeIgnoreComments = true

# This is required as the CI pre-commit does not download the module (i.e. numpy, pygame, box2d)
#   Therefore, we have to ignore missing imports
reportMissingImports = "none"
# Some modules are missing type stubs, which is an issue when running pyright locally
reportMissingTypeStubs = false
# For warning and error, will raise an error when
reportInvalidTypeVarUse = "none"

# reportUnknownMemberType = "warning"  # -> raises 6035 warnings
# reportUnknownParameterType = "warning"  # -> raises 1327 warnings
# reportUnknownVariableType = "warning"  # -> raises 2585 warnings
# reportUnknownArgumentType = "warning"  # -> raises 2104 warnings
reportGeneralTypeIssues = "none"        # -> commented out raises 489 errors
reportUntypedFunctionDecorator = "none" # -> pytest.mark.parameterize issues

reportPrivateUsage = "warning"
reportUnboundVariable = "warning"

[tool.pytest.ini_options]
filterwarnings = []


[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "scripts",
    "cogment_lab/generated",
    "**/__init__.py",
]

# Same as Black.
line-length = 120
indent-width = 4

# Assume Python 3.8
target-version = "py38"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
